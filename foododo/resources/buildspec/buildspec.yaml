version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - env
      - "[ ! -z ${CODEBUILD_SRC_DIR_BuildArtifact} ] && cp -r $CODEBUILD_SRC_DIR_BuildArtifact/* . &> /dev/null"

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI/$PROJECT:$IMAGE_TAG .
      - docker tag $REPOSITORY_URI/$PROJECT:$IMAGE_TAG $REPOSITORY_URI/$PROJECT:latest

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI/$PROJECT:$IMAGE_TAG
      - docker push $REPOSITORY_URI/$PROJECT:latest
      - printf '[{"name":"$PROJECT","imageUri":"%s"}]' $REPOSITORY_URI/$PROJECT:latest > image_definitions.json
      - echo Deploying to Amazon ECS...
      - aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $PROJECT-terraform-landing-fargate --force-new-deployment
